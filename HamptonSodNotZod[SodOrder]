//Author: Trevon Hampton
//Course: Cpt 187
//Purpose:
//CreateDate: 12/04/2019

package edu.cpt187.hampton.exercise6;

public class SodOrder 
{
	private final double ZERO_TOTAL = 0.0;
	private final double TAX_RATE = .075;
	private int [] itemCounts; 
	private int [] discountCounts;
	private int [] prizeCounts;
	private char discountType = 0;
	private String itemName = "";
	private double itemPrice = 0.0;
	private String discountName = "";
	private double discountRate = 0.0;
	private int howMany = 0;
	private int lastItemSelectedIndex = 0;
	private String prizeName = "";

	SodOrder() 
	{
	}//End of Constructor

	//Setters
	public void setItemCountArray(int borrowedRecordCount)
	{
		if (itemCounts == null || borrowedRecordCount > itemCounts.length)
		{
			itemCounts = new int[borrowedRecordCount];
		}
	}//End of setItemCountArray

	public void setItemSelection(int borrowedSearchIndex)
	{
		lastItemSelectedIndex = borrowedSearchIndex;
	}//End of setItemSelection

	public void setItemName(String[] borrowedItemNames)
	{
		itemName = borrowedItemNames[lastItemSelectedIndex];
		itemCounts[lastItemSelectedIndex]++;
	}//End of setItemName

	public void setItemPrice(double[] borrowedItemPrices)
	{
		itemPrice = borrowedItemPrices [lastItemSelectedIndex];
	}//End of setItemPrice

	public void setHowMany(int borrowedHowMany)
	{
		howMany = borrowedHowMany;
	}//End of setHowMany

	public void setDiscountType(char borrowedMenuSelection)
	{
		discountType = borrowedMenuSelection;
	}//End of setDiscountType

	public void setDiscountName(String[] borrowedDiscountNames)
	{
		if (discountCounts == null)
		{
			discountCounts = new int[borrowedDiscountNames.length];
		}

		if(discountType == 'A') 
		{
			discountName = borrowedDiscountNames [0];
			discountCounts[0]++;
		}
		else if(discountType == 'B')
		{
			discountName = borrowedDiscountNames [1];
			discountCounts[1]++;
		}
		else
		{
			discountName = borrowedDiscountNames [2];
			discountCounts[2]++;
		}	
	}//End of setDiscountName

	public void setDiscountRate(double[] borrowedDiscountRates)
	{
		if(discountType == 'A') 
		{
			discountRate = borrowedDiscountRates [0];	
		}
		else if(discountType == 'B')
		{
			discountRate = borrowedDiscountRates [1];			
		}
		else
		{
			discountRate = borrowedDiscountRates [2];	
		}
	}//End of setDiscountRate

	public void setPrizeName(String[] borrowedPrizeNames, int borrowedPrizeIndex)
	{
		if(prizeCounts == null) //initialize discount counts, only if needed
		{
			prizeCounts = new int[borrowedPrizeNames.length];
		}
		prizeName = borrowedPrizeNames[borrowedPrizeIndex];
		prizeCounts[borrowedPrizeIndex]++;
	}//End of setPrizeName

	public void setDecreaseInStock(Inventory borrowedInventoryObject)
	{
		borrowedInventoryObject.setReducedStock(howMany);
	}//End of setDecreaseInStock

	//Getters
	public int getInStockCount(int[] borrowedInStockCounts)
	{

		return borrowedInStockCounts[lastItemSelectedIndex];
	}//End of getInStockCount

	public String getItemName()
	{
		return itemName;
	}//End of getItemName

	public double getItemPrice()
	{
		return itemPrice;
	}//End of getItemPrice

	public int[] getItemCounts()
	{
		return itemCounts;
	}//End of getItemCounts

	public int getHowMany()
	{
		return howMany;
	}//End of getHowMany

	public String getDiscountName()
	{
		return discountName;
	}//End of getDiscountName

	public double getDiscountRate()
	{
		return discountRate;
	}//End of getDiscountRate

	public int[] getDiscountCounts()
	{
		return discountCounts;
	}//End of getDiscountCounts

	public double getDiscountAmt() 
	{
		return getItemPrice() * getDiscountRate();
	}//End getDiscountAmt

	public double getDiscountPrice()
	{
		return getItemPrice() - getDiscountAmt();
	}//End of getDiscountPrice

	public String getPrizeName()
	{
		return prizeName;
	}//End of getPrizeName

	public int [] getPrizeCounts()
	{
		return prizeCounts;
	}//End of getPrizeCounts

	public double getSubTotal()
	{
		return getHowMany() * getDiscountPrice();
	}//End of getSubTotal

	public double getTaxRate()
	{
		return TAX_RATE;
	}//End of getTAX_RATE

	public double getTaxAmt()
	{
		return getTaxRate() * getSubTotal();
	}//End of getTaxAmt

	public double getTotalCost()
	{
		if (discountType == ' ')
		{
			return ZERO_TOTAL;
		}
		else
		{
			return getSubTotal() + getTaxAmt();
		}
	}//End of getTotalCost

}//End of SodOrder Class
